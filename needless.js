// Generated by CoffeeScript 1.6.2
var getModuleFromCache, isRelativePath, needless, path, searchCache, toFullPath;

path = require('path');

module.exports = needless = function(moduleName) {
  /* Removes a module and all its children from the require cache.
  */

  var error;

  try {
    return searchCache(moduleName, function(mod) {
      return delete require.cache[mod.id];
    });
  } catch (_error) {
    error = _error;
    return true;
  }
};

searchCache = function(moduleName, callback) {
  /* Searches through the cache to find a module and all its children.
      Calls the callback on each of the found modules.
  */

  var mod, recurse;

  mod = getModuleFromCache(moduleName);
  if (mod != null) {
    return (recurse = function(mod) {
      mod.children.forEach(recurse);
      return callback(mod);
    })(mod);
  }
};

getModuleFromCache = function(name) {
  var modulePath;

  if (isRelativePath(name)) {
    name = toFullPath(name);
  }
  modulePath = require.resolve(name);
  return require.cache[modulePath];
};

isRelativePath = function(name) {
  return (name.indexOf('./')) === 0;
};

toFullPath = function(relativePath) {
  var parentDirname;

  parentDirname = path.dirname(module.parent.filename);
  return path.join(parentDirname, relativePath);
};
